{"version":3,"sources":["App.js","index.js"],"names":["App","ls","localStorage","date","Date","colors","useState","selectedColor","setSelectedColor","isOpenMenu","toggleMenu","notionTitle","setNotionTitle","notionText","setNotionText","lsValue","setLsValue","lsKeys","Object","keys","sort","className","onClick","height","xmlns","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","d","onSubmit","e","preventDefault","item","title","text","color","setItem","JSON","stringify","setTimeout","width","type","name","onChange","target","value","required","map","spanStyle","backgroundColor","selectedSpanStyle","border","style","key","note","stamp","noteStyle","parse","removeItem","closest","display","removeFromLs","onInput","updatedItem","changeNotionText","defaultValue","toLocaleString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30e6aac3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport './App.css';\n\n\nfunction App() {\n\n  const ls = localStorage;\n  const date = +new Date();\n  const colors = [\n    '#D6F0E8',\n    '#FBF3DF',\n    '#FAEFEF',\n    '#D7F0FA',\n    '#EFEDF9',\n  ];\n\n  const timestampToDate = (stamp) => {\n    return new Date(stamp).toLocaleString()\n  };\n  \n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n  const [isOpenMenu, toggleMenu] = useState(false);\n  const [notionTitle, setNotionTitle] = useState('');\n  const [notionText, setNotionText] = useState('');\n  const [lsValue, setLsValue] = useState(ls);\n\n  const addToLs = (e) => {\n    e.preventDefault();\n    const item = {\n      date: date,\n      title: notionTitle,\n      text: notionText,\n      color: selectedColor,\n    };\n    ls.setItem(date, JSON.stringify(item));\n    setLsValue(ls);\n    setTimeout(() => {\n      toggleMenu(!isOpenMenu)\n    }, 100);\n    setNotionText('');\n  };\n\n  const removeFromLs = (note, e) => {\n    ls.removeItem(note);\n    e.target.closest('li').style.display = 'none';\n  };\n\n  const changeNotionText = (note, e) => {\n    const updatedItem = {\n      date: JSON.parse(lsValue[note]).date,\n      title: JSON.parse(lsValue[note]).title,\n      text: e.target.value,\n      color: JSON.parse(lsValue[note]).color,\n    };\n    ls.setItem(note, JSON.stringify(updatedItem));\n    setLsValue(ls);\n  };\n\n  const lsKeys = Object.keys(lsValue).sort();\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__menu-btn\" onClick={() => toggleMenu(!isOpenMenu)}>\n        <svg\n          className=\"app__menu-btn__plus\"\n          height=\"25px\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 50 50\">\n          <circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"#08b783\" />\n          <path fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\" d=\"M25 13v25M38 25H13\" />\n        </svg>\n        <span className=\"app__menu-btn__lable\">NEW</span>\n      </div>\n      {isOpenMenu \n      ? ( \n          <form className=\"app__creating-menu\" onSubmit={addToLs}>\n\n            <p className=\"app__creating-menu__title\">Create note</p>\n            <svg\n              className=\"app__creating-menu__x-mark\"\n              fill=\"#F03D3C\" height=\"17\"\n              onClick={() => toggleMenu(!isOpenMenu)}\n              viewBox=\"0 0 192 192\"\n              width=\"15\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M128 32v-8a24 24 0 00-24-24H88a24 24 0 00-24 24v8H8v16h176V32zm-48-8a8 8 0 018-8h16a8 8 0 018 8v8H80zM30 171a24 24 0 0024 21h84a24 24 0 0024-21l12-115H18zm98-100l16 2-8 96-16-2zm-40 1h16v96H88zm-24-1l8 96-16 2-8-96z\">\n              </path>\n            </svg>\n\n            <p className=\"app__creating-menu__input-title\">Title</p>\n            <input className=\"app__creating-menu__input\" type=\"text\" name=\"title\" onChange={(e) => setNotionTitle(e.target.value)} required/>\n            <p className=\"app__creating-menu__input-title\">Text</p>\n            <textarea className=\"app__creating-menu__textarea\"  name=\"text\" onChange={(e) => setNotionText(e.target.value)}/>\n\n            <p className=\"app__creating-menu__input-title\">Color</p>\n            <div className=\"app__creating-menu__color-select\">\n              {colors.map(color => {\n                const spanStyle = {\n                  backgroundColor: color\n                };\n                const selectedSpanStyle = {\n                  backgroundColor: color,\n                  border: '2px solid #08b783',\n                };\n                return selectedColor === color\n                  ? <span style={selectedSpanStyle} className=\"app__creating-menu__color-select__color\" key={color} onClick={() => setSelectedColor(color)}></span>\n                  : <span style={spanStyle} className=\"app__creating-menu__color-select__color\" key={color} onClick={() => setSelectedColor(color)}></span>\n              })}\n            </div>\n\n            <input type=\"submit\" value=\"Create\" />\n\n          </form>\n        )\n      : null\n      }\n\n      <ul className=\"app__notions-container\">\n        {lsKeys.map(function(note) {\n          const noteStyle = {\n            backgroundColor: JSON.parse(lsValue[note]).color,\n          }\n          return (\n        <li key={note} style={noteStyle} className=\"app__notions-container__notion\">\n          <header className=\"app__notions-container__notion__header\">\n            <p className=\"app__notions-container__notion__header__title\">{JSON.parse(lsValue[note]).title}</p>\n            <svg\n              className=\"app__notions-container__notion__header__x-mark\"\n              fill=\"#F03D3C\" height=\"17\"\n              onClick={(e)=>removeFromLs(note, e)}\n              viewBox=\"0 0 192 192\"\n              width=\"15\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M128 32v-8a24 24 0 00-24-24H88a24 24 0 00-24 24v8H8v16h176V32zm-48-8a8 8 0 018-8h16a8 8 0 018 8v8H80zM30 171a24 24 0 0024 21h84a24 24 0 0024-21l12-115H18zm98-100l16 2-8 96-16-2zm-40 1h16v96H88zm-24-1l8 96-16 2-8-96z\"></path>\n            </svg>\n          </header>\n          <TextareaAutosize onInput={(e) => changeNotionText(note, e)} defaultValue={JSON.parse(lsValue[note]).text}  className=\"app__notions-container__notion__text\"/> \n          <p className=\"app__notions-container__notion__time\">{timestampToDate(JSON.parse(lsValue[note]).date)}</p>\n        </li>\n        )})}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}